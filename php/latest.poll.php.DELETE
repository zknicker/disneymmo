<?php
/*
* ==============================================================================
* DisneyMMO EOS Latest Poll
*
* For use by DisneyMMO.com
* By Zach Knickerbocker
* ==============================================================================
*
* Retrieves the latest poll and sets up support for viewing results and
* voting for poll options under various conditions.
*
* (NOTE) This code is based on that of PHPBB's, and thus uses similar variable
* 		 names and code structures.
*/

// Define PHPBB.
define('IN_PHPBB', true);
$phpbb_root_path = (defined('PHPBB_ROOT_PATH')) ? PHPBB_ROOT_PATH : '../community/';
$phpEx = substr(strrchr(__FILE__, '.'), 1);

// PHPBB includes.
include($phpbb_root_path . 'common.' . $phpEx);
include($phpbb_root_path . 'includes/functions_display.' . $phpEx);
include($phpbb_root_path . 'includes/bbcode.' . $phpEx);

// DisneyMMO Includes.
include('eos.config.php');

// Start session management.
$user->session_begin();
$auth->acl($user->data);
$user->setup();

// PHPBB support stuff.
$user->add_lang('viewtopic');
add_form_key('posting');

/* ==============================================================================
 * Logic For Poll Results
 * ============================================================================== */
 
// Construct query to get first poll from forums array.
$sql = 'SELECT t.poll_title, t.poll_start, t.topic_id,  t.topic_first_post_id, t.topic_first_poster_colour, t.topic_first_poster_name, t.topic_poster, t.forum_id, t.poll_length, t.poll_vote_change, t.poll_max_options, t.topic_status, f.forum_status, p.bbcode_bitfield, p.bbcode_uid
        FROM ' . TOPICS_TABLE . ' t, ' . POSTS_TABLE . ' p, ' . FORUMS_TABLE . ' f
        WHERE t.forum_id = f.forum_id AND t.topic_approved = 1 AND t.poll_start > 0
        AND ' . $db->sql_in_set('t.forum_id', $eos_config['poll_source_forums']) . '
        AND t.topic_moved_id = 0
        AND p.post_id = t.topic_first_post_id
        ORDER BY t.poll_start DESC';

// Get result of query.
$result = $db->sql_query_limit($sql, 1);

// If a poll was found:
if ($result) {

    // Capture data from DB in a variable.
    $data = $db->sql_fetchrow($result);

    // Preliminary setup.
    $poll_has_options = false;              // Does the poll have options? (it better)
    $topic_id = (int) $data['topic_id'];    // Topic ID containing poll.
    $forum_id = (int) $data['forum_id'];    // Forum ID containing poll.
    $cur_voted_id = array();                // Options the user has voted for.
    $s_can_vote = false;                    // Can the user vote?
    
    // Registered users can vote on polls when they've not already voted
    // on them. This is verified by querying the database table which holds
    // records of how users have voted on poll options.
    if ($user->data['is_registered']) {
    
        // Construct query for checking user's voting information.
        $vote_sql = 'SELECT poll_option_id
            FROM ' . POLL_VOTES_TABLE . '
            WHERE topic_id = ' . $topic_id . '
            AND vote_user_id = ' . $user->data['user_id'];
        
        // Retrieve query results.
        $vote_result = $db->sql_query($vote_sql);

        // Get user's votes.
        while ($row = $db->sql_fetchrow($vote_result)) {
        
            $cur_voted_id[] = $row['poll_option_id'];
        }
        
        $db->sql_freeresult($vote_result);
        
    }
    
    // Guests can vote on polls they are not marked (via cookie) as already
    // having voted on. However, this will likely always be disabled, since there
    // is nothing preventing guests from voting multiple times by clearing cookies.
    // While we'll never likely have a use for this logic, it remains in the off
    // chance that we do.
    else {
        
        if (isset($_COOKIE[$config['cookie_name'] . '_poll_' . $topic_id])) {
        
            $cur_voted_id = explode(',', request_var($config['cookie_name'] . '_poll_' . $topic_id, 0, false, true));
            $cur_voted_id = array_map('intval', $cur_voted_id);
        }
    }

    // The user can vote when all of these primary conditions are met:
    //
    //  (1)(a) The user has not voted on this poll AND can vote on polls in this forum.
    //          (OR)
    //     (b) The user can change his votes on polls in this forum AND this poll permits vote changing.
    //      
    //  (2) The poll has not expired, or never expires.
    //  (3) The topic containing the poll is not locked.
    //  (4) The forum containing the poll is not locked.
    $s_can_vote = (((!sizeof($cur_voted_id) && $auth->acl_get('f_vote', $forum_id)) ||
        ($auth->acl_get('f_votechg', $forum_id) && $data['poll_vote_change'])) &&
        (($data['poll_length'] != 0 && $data['poll_start'] + $data['poll_length'] > time()) || $data['poll_length'] == 0) &&
        $data['topic_status'] != ITEM_LOCKED &&
        $data['forum_status'] != ITEM_LOCKED) ? true : false;

    // Construct SQL to retrieve the poll options and associated data for poll.
    $poll_sql = 'SELECT po.poll_option_id, po.poll_option_text, po.poll_option_total
        FROM ' . POLL_OPTIONS_TABLE . " po
        WHERE po.topic_id = {$topic_id}
        ORDER BY po.poll_option_id";

    // Retrieve result of query.
    $poll_result = $db->sql_query($poll_sql);
    $poll_total_votes = 0;
    $poll_data = array();

    // Cycle through poll results to set variables.
    if ($poll_result) {
    
        while($row = $db->sql_fetchrow($poll_result)) {
        
            $poll_has_options = true;
            $poll_data[] = $row;
            $poll_total_votes += $row['poll_option_total'];
        }
    }
    
    $db->sql_freeresult($poll_result);

    // Populate variables for template.
    $poll_url = append_sid("{$phpbb_root_path}viewtopic.$phpEx", "f=$forum_id&t=$topic_id&view=viewpoll#viewpoll");
    $viewtopic_url = append_sid("{$phpbb_root_path}viewtopic.$phpEx", "f=$forum_id&t=$topic_id");
    $poll_end = $data['poll_length'] + $data['poll_start'];

    // Parse the title text.
    if ($data['bbcode_bitfield']) { $poll_bbcode = new bbcode(); }
    else { $poll_bbcode = false; }

    $data['poll_title'] = censor_text($data['poll_title']);

    if ($poll_bbcode !== false) {
    
        $poll_bbcode->bbcode_second_pass($data['poll_title'], $data['bbcode_uid'], $data['bbcode_bitfield']);
    }

    $data['poll_title'] = bbcode_nl2br($data['poll_title']);
    $data['poll_title'] = smiley_text($data['poll_title']);
    unset($poll_bbcode);
    
    // Assigned template vars for poll.
    $template->assign_block_vars('poll', array(
    
        'S_POLL_HAS_OPTIONS'	=> $poll_has_options,
        'POLL_QUESTION'			=> $data['poll_title'],
        'POLL_AUTHOR'			=> get_username_string('full', $data['topic_poster'], $data['topic_first_poster_name'], $data['topic_first_poster_colour']),
        'POLL_TIME'				=> $user->format_date($data['poll_start']),
        'U_POLL_TOPIC'			=> append_sid($phpbb_root_path . 'viewtopic.' . $phpEx . '?t=' . $topic_id . '&f=' . $forum_id),
        'POLL_LENGTH'			=> $data['poll_length'],
        'TOPIC_ID'				=> $topic_id,
        'FORUM_ID'              => $forum_id,
        'CUR_VOTED_ID'          => implode(',', $cur_voted_id),
        'TOTAL_VOTES'			=> $poll_total_votes,
        'L_MAX_VOTES'			=> ($data['poll_max_options'] == 1) ? $user->lang['MAX_OPTION_SELECT'] : sprintf($user->lang['MAX_OPTIONS_SELECT'], $data['poll_max_options']),
        'L_POLL_LENGTH'			=> ($data['poll_length']) ? sprintf($user->lang[($poll_end > time()) ? 'POLL_RUN_TILL' : 'POLL_ENDED_AT'], $user->format_date($poll_end)) : '',
        'S_CAN_VOTE'			=> $s_can_vote,
        'S_DISPLAY_RESULTS'		=> true,
        'S_IS_MULTI_CHOICE'		=> ($data['poll_max_options'] > 1) ? true : false,
        'S_POLL_ACTION'			=> 'latest.poll.ajax.php?style=4',
        'U_VIEW_RESULTS'		=> $poll_url,
        'U_VIEW_TOPIC'			=> $viewtopic_url,
    ));
    
    // Now that general poll is dealt with, let's look at poll options.
    foreach($poll_data as $pd) {
    
        // Calculate option's percent of total votes.
        $option_pct = ($poll_total_votes > 0) ? $pd['poll_option_total'] / $poll_total_votes : 0;
        $option_pct_txt = sprintf("%.1d%%", round($option_pct * 100));

        // Parse the option text.
        if ($data['bbcode_bitfield']) { $poll_bbcode = new bbcode(); }
        else { $poll_bbcode = false; }
    
        $pd['poll_option_text'] = censor_text($pd['poll_option_text']);

        if ($poll_bbcode !== false) {
        
            $poll_bbcode->bbcode_second_pass($pd['poll_option_text'], $data['bbcode_uid'], $data['bbcode_bitfield']);
        }

        $pd['poll_option_text'] = bbcode_nl2br($pd['poll_option_text']);
        $pd['poll_option_text'] = smiley_text($pd['poll_option_text']);
        unset($poll_bbcode);

        $template->assign_block_vars('poll.poll_option', array(
            'POLL_OPTION_ID'		=> $pd['poll_option_id'],
            'POLL_OPTION_CAPTION'	=> $pd['poll_option_text'],
            'POLL_OPTION_RESULT'	=> $pd['poll_option_total'],
            'POLL_OPTION_PERCENT'	=> $option_pct_txt,
            'POLL_OPTION_PCT'		=> round($option_pct * 100),
            'POLL_OPTION_IMG'		=> $user->img('poll_center', $option_pct_txt, round($option_pct * 250)),
            'POLL_OPTION_VOTED'		=> (in_array($pd['poll_option_id'], $cur_voted_id)) ? true : false
        ));
        
    }
}

$db->sql_freeresult($result);

page_header();
$template->set_filenames(array('body' => 'poll_block.html'));
page_footer();
?>